/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employd;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
//import java.io.FileNotFoundException;
//import java.io.FileWriter;
//import java.io.IOException;
import objs.Employee;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
//import java.util.Arrays;
//import java.util.Scanner;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;

/**
 *
 * @author khura
 */
public class employdPage extends javax.swing.JFrame {

    /**
     * Creates new form employdPage
     */
    public employdPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employleeLogin = new javax.swing.JFrame();
        usernameLabel = new javax.swing.JLabel();
        pwLabel = new javax.swing.JLabel();
        eLoginBtn = new javax.swing.JButton();
        employeeLoginTitle = new javax.swing.JLabel();
        eLoginUsername = new javax.swing.JTextField();
        ePasswordLogin = new javax.swing.JPasswordField();
        adminSettings = new javax.swing.JFrame();
        adminSettingsTItle = new javax.swing.JLabel();
        settingsAddUserBtn = new javax.swing.JButton();
        viewProfileBtn = new javax.swing.JButton();
        copyrightLabel = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        adminLogin = new javax.swing.JFrame();
        userLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        adminLgnBtn = new javax.swing.JButton();
        adminLoginTitle = new javax.swing.JLabel();
        adminUser = new javax.swing.JTextField();
        adminPW = new javax.swing.JPasswordField();
        addUser = new javax.swing.JFrame();
        photoLabel = new javax.swing.JLabel();
        userLabel1 = new javax.swing.JLabel();
        usernameInput = new javax.swing.JTextField();
        passLabel1 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        nameLabel1 = new javax.swing.JLabel();
        idNumInput = new javax.swing.JTextField();
        idLabel1 = new javax.swing.JLabel();
        posInput = new javax.swing.JTextField();
        posLabel1 = new javax.swing.JLabel();
        addPhotoBtn = new javax.swing.JButton();
        addUserBtn = new javax.swing.JButton();
        passwordInput = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jFileChooser1 = new javax.swing.JFileChooser();
        employee = new javax.swing.JFrame();
        employeeLabel = new javax.swing.JLabel();
        userLabel2 = new javax.swing.JLabel();
        employeeUsername = new javax.swing.JTextField();
        passLabel2 = new javax.swing.JLabel();
        employeeFullName = new javax.swing.JTextField();
        nameLabel2 = new javax.swing.JLabel();
        employeeId = new javax.swing.JTextField();
        idLabel2 = new javax.swing.JLabel();
        employeePos = new javax.swing.JTextField();
        posLabel2 = new javax.swing.JLabel();
        employeePassword = new javax.swing.JPasswordField();
        viewPassBox = new javax.swing.JCheckBox();
        clockInBtn = new javax.swing.JToggleButton();
        timeWorkedLabel = new javax.swing.JLabel();
        totalTimeWorked = new javax.swing.JLabel();
        admin = new javax.swing.JFrame();
        employeeLabel1 = new javax.swing.JLabel();
        userLabel3 = new javax.swing.JLabel();
        employeeUsername1 = new javax.swing.JTextField();
        passLabel3 = new javax.swing.JLabel();
        employeeFullName1 = new javax.swing.JTextField();
        nameLabel3 = new javax.swing.JLabel();
        employeeId1 = new javax.swing.JTextField();
        idLabel3 = new javax.swing.JLabel();
        employeePos1 = new javax.swing.JTextField();
        posLabel3 = new javax.swing.JLabel();
        employeePassword1 = new javax.swing.JPasswordField();
        viewPasswordBox = new javax.swing.JCheckBox();
        ITSBEENYOU = new javax.swing.JLabel();
        mainTitle = new javax.swing.JLabel();
        adminLoginBtn = new javax.swing.JButton();
        empLoginBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        employleeLogin.setBounds(new java.awt.Rectangle(0, 0, 350, 280));

        usernameLabel.setText("Username:");

        pwLabel.setText("Password:");

        eLoginBtn.setText("Login");
        eLoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eLoginBtnActionPerformed(evt);
            }
        });

        employeeLoginTitle.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        employeeLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeeLoginTitle.setText("Employee Login");

        eLoginUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eLoginUsernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout employleeLoginLayout = new javax.swing.GroupLayout(employleeLogin.getContentPane());
        employleeLogin.getContentPane().setLayout(employleeLoginLayout);
        employleeLoginLayout.setHorizontalGroup(
            employleeLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employleeLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(employleeLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(employleeLoginLayout.createSequentialGroup()
                        .addComponent(employeeLoginTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employleeLoginLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(employleeLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pwLabel)
                            .addComponent(eLoginUsername)
                            .addComponent(usernameLabel)
                            .addComponent(eLoginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(ePasswordLogin))
                        .addGap(89, 89, 89))))
        );
        employleeLoginLayout.setVerticalGroup(
            employleeLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employleeLoginLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(employeeLoginTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwLabel)
                .addGap(1, 1, 1)
                .addComponent(ePasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eLoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        adminSettings.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        adminSettings.setBounds(new java.awt.Rectangle(0, 0, 451, 300));

        adminSettingsTItle.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        adminSettingsTItle.setText("Admin Settings");

        settingsAddUserBtn.setText("Add User");
        settingsAddUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsAddUserBtnActionPerformed(evt);
            }
        });

        viewProfileBtn.setText("View Profile");
        viewProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProfileBtnActionPerformed(evt);
            }
        });

        copyrightLabel.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        copyrightLabel.setForeground(new java.awt.Color(204, 204, 204));
        copyrightLabel.setText("Â© Manhar Inc");
        copyrightLabel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                copyrightLabelAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        clearBtn.setText("Clear Database");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminSettingsLayout = new javax.swing.GroupLayout(adminSettings.getContentPane());
        adminSettings.getContentPane().setLayout(adminSettingsLayout);
        adminSettingsLayout.setHorizontalGroup(
            adminSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminSettingsLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(adminSettingsTItle)
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(adminSettingsLayout.createSequentialGroup()
                .addGroup(adminSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminSettingsLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addGroup(adminSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(settingsAddUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewProfileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(adminSettingsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(copyrightLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearBtn)))
                .addContainerGap())
        );
        adminSettingsLayout.setVerticalGroup(
            adminSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminSettingsLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(adminSettingsTItle)
                .addGap(30, 30, 30)
                .addComponent(settingsAddUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewProfileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adminSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyrightLabel)
                    .addComponent(clearBtn))
                .addContainerGap())
        );

        adminLogin.setBounds(new java.awt.Rectangle(0, 0, 350, 280));

        userLabel.setText("Username:");

        passLabel.setText("Password:");

        adminLgnBtn.setText("Login");
        adminLgnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminLgnBtnActionPerformed(evt);
            }
        });

        adminLoginTitle.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        adminLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminLoginTitle.setText("Admin Login");

        javax.swing.GroupLayout adminLoginLayout = new javax.swing.GroupLayout(adminLogin.getContentPane());
        adminLogin.getContentPane().setLayout(adminLoginLayout);
        adminLoginLayout.setHorizontalGroup(
            adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminLoginTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminLoginLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passLabel)
                    .addComponent(adminUser)
                    .addComponent(userLabel)
                    .addComponent(adminLgnBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(adminPW))
                .addGap(89, 89, 89))
        );
        adminLoginLayout.setVerticalGroup(
            adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(adminLoginTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passLabel)
                .addGap(1, 1, 1)
                .addComponent(adminPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(adminLgnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        addUser.setBounds(new java.awt.Rectangle(0, 0, 400, 600));
        addUser.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                addUserWindowClosing(evt);
            }
        });

        photoLabel.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        userLabel1.setText("Username:");

        passLabel1.setText("Password:");

        nameLabel1.setText("Full Name:");

        idLabel1.setText("Id #:");

        posLabel1.setText("Position:");

        addPhotoBtn.setText("Add Photo");
        addPhotoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhotoBtnActionPerformed(evt);
            }
        });

        addUserBtn.setText("Add User");
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        jCheckBox1.setText("View Password");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addUserLayout = new javax.swing.GroupLayout(addUser.getContentPane());
        addUser.getContentPane().setLayout(addUserLayout);
        addUserLayout.setHorizontalGroup(
            addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserLayout.createSequentialGroup()
                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addUserLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addUserLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addUserLayout.createSequentialGroup()
                                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passLabel1)
                                    .addComponent(userLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernameInput)
                                    .addComponent(passwordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)))
                            .addGroup(addUserLayout.createSequentialGroup()
                                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel1)
                                    .addComponent(idLabel1)
                                    .addComponent(posLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(posInput, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(addUserLayout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(addPhotoBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addUserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox1)
                        .addGap(241, 241, 241)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        addUserLayout.setVerticalGroup(
            addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPhotoBtn)
                .addGap(29, 29, 29)
                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel1)
                    .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel1)
                    .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel1)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel1)
                    .addComponent(idNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(posLabel1)
                    .addComponent(posInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18))
        );

        employee.setBounds(new java.awt.Rectangle(0, 0, 400, 600));
        employee.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                employeeWindowClosing(evt);
            }
        });

        employeeLabel.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        userLabel2.setText("Username:");

        employeeUsername.setEnabled(false);

        passLabel2.setText("Password:");

        employeeFullName.setEnabled(false);

        nameLabel2.setText("Full Name:");

        employeeId.setEnabled(false);

        idLabel2.setText("Id #:");

        employeePos.setEnabled(false);

        posLabel2.setText("Position:");

        employeePassword.setEnabled(false);

        viewPassBox.setText("View Password");
        viewPassBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPassBoxActionPerformed(evt);
            }
        });

        clockInBtn.setText("Clock In");
        clockInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockInBtnActionPerformed(evt);
            }
        });

        timeWorkedLabel.setText("Time Worked:");

        javax.swing.GroupLayout employeeLayout = new javax.swing.GroupLayout(employee.getContentPane());
        employee.getContentPane().setLayout(employeeLayout);
        employeeLayout.setHorizontalGroup(
            employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeeLayout.createSequentialGroup()
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(employeeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewPassBox))
                    .addGroup(employeeLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(employeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(employeeLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(employeeLayout.createSequentialGroup()
                                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passLabel2)
                                    .addComponent(userLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(employeeUsername)
                                    .addComponent(employeePassword, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)))
                            .addGroup(employeeLayout.createSequentialGroup()
                                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel2)
                                    .addComponent(idLabel2)
                                    .addComponent(posLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeePos, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeId, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(clockInBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(employeeLayout.createSequentialGroup()
                                .addComponent(timeWorkedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalTimeWorked, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        employeeLayout.setVerticalGroup(
            employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeeLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(employeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel2)
                    .addComponent(employeeUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel2)
                    .addComponent(employeePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel2)
                    .addComponent(employeeFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel2)
                    .addComponent(employeeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(posLabel2)
                    .addComponent(employeePos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clockInBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addGroup(employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeWorkedLabel)
                    .addComponent(totalTimeWorked, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewPassBox)
                .addGap(18, 18, 18))
        );

        admin.setBounds(new java.awt.Rectangle(0, 0, 400, 600));
        admin.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                adminWindowClosing(evt);
            }
        });

        employeeLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        userLabel3.setText("Username:");

        employeeUsername1.setEnabled(false);

        passLabel3.setText("Password:");

        employeeFullName1.setEnabled(false);

        nameLabel3.setText("Full Name:");

        employeeId1.setEnabled(false);

        idLabel3.setText("Id #:");

        employeePos1.setEnabled(false);

        posLabel3.setText("Position:");

        employeePassword1.setEnabled(false);

        viewPasswordBox.setText("View Password");
        viewPasswordBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPasswordBoxActionPerformed(evt);
            }
        });

        ITSBEENYOU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ITSBEENYOU.setText("IT'S BEEN YOU ALL ALONG!!!!");

        javax.swing.GroupLayout adminLayout = new javax.swing.GroupLayout(admin.getContentPane());
        admin.getContentPane().setLayout(adminLayout);
        adminLayout.setHorizontalGroup(
            adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLayout.createSequentialGroup()
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewPasswordBox))
                    .addGroup(adminLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(employeeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(adminLayout.createSequentialGroup()
                                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passLabel3)
                                    .addComponent(userLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(employeeUsername1)
                                    .addComponent(employeePassword1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)))
                            .addGroup(adminLayout.createSequentialGroup()
                                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel3)
                                    .addComponent(idLabel3)
                                    .addComponent(posLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeePos1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeId1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeFullName1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(ITSBEENYOU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        adminLayout.setVerticalGroup(
            adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(employeeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel3)
                    .addComponent(employeeUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel3)
                    .addComponent(employeePassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel3)
                    .addComponent(employeeFullName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel3)
                    .addComponent(employeeId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(posLabel3)
                    .addComponent(employeePos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ITSBEENYOU, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(viewPasswordBox)
                .addGap(18, 18, 18))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        mainTitle.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        mainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTitle.setText("Welcome to Employ'd");

        adminLoginBtn.setText("Admin Login");
        adminLoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminLoginBtnActionPerformed(evt);
            }
        });

        empLoginBtn.setText("Employee Login");
        empLoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empLoginBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Â© Manhar Inc");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adminLoginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(empLoginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(mainTitle)
                .addGap(34, 34, 34)
                .addComponent(adminLoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(empLoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// Creating a File object for the "staffDB.csv" file
    File f = new File("staffDB.csv");

// Creating an ArrayList to store Employee objects
    ArrayList<Employee> staff = new ArrayList<Employee>();

// (Optional) Creating an ArrayList to store Supervisor objects
// ArrayList<Employee> sups = new ArrayList<Employee>();
// String to store a URL link
    String urlLink = "";

// Reference to the currently logged-in Employee
    Employee currentLogin;

// Variable to track the number of clicks
    int clicks = 0;

    public static void checkFile(File f) {
        try {
            //see if it exists
            if (f.exists() == false) {
                f.createNewFile();
            }
        } catch (FileNotFoundException e) {
            //this prints out the error (crypticly)
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    public void writeFile(File f) throws IOException {
// Creating a FileWriter to write to the file located at the absolute path of "f"
        FileWriter fw = new FileWriter(f.getAbsolutePath());

// Creating a BufferedWriter for efficient writing
        BufferedWriter bw = new BufferedWriter(fw);

// Looping through each Employee in the staff ArrayList
        for (int i = 0; i < staff.size(); i++) {
            // Writing the data returned by the saveToFile() method for each Employee
            bw.write(staff.get(i).saveToFile());

            // Moving to the next line in the file
            bw.newLine();
        }

// Closing the BufferedWriter to flush and close the underlying FileWriter
        bw.close();

// Closing the FileWriter
        fw.close();

    }

    public void readFile(File f) throws FileNotFoundException, IOException {
// Creating a FileReader to read from the file located at the absolute path of "f"
        FileReader fr = new FileReader(f.getAbsolutePath());

// Creating a BufferedReader for efficient reading
        BufferedReader br = new BufferedReader(fr);

// Flag to determine if the reading process is complete
        boolean done = false;

// Loop to read each line from the file until there are no more lines
        while (!done) { // If not done (false)
            // Reading the current line from the file
            String currentLine = br.readLine();

            // Checking if the end of the file has been reached
            if (currentLine == null) {
                done = true;
            } else {
                // Splitting the current line into an array based on ","
                String[] info = currentLine.split(",");

                // Creating an Employee object from the information read from the file
                Employee tempEmp = new Employee(info[0], info[1], info[2], Integer.parseInt(info[3]), info[4], info[5], Long.parseLong(info[6]), Boolean.parseBoolean(info[7]), LocalDateTime.parse(info[8]));

                // Adding the Employee object to the staff ArrayList
                staff.add(tempEmp);
            }
        }

// Closing the BufferedReader to release resources
        br.close();

    }
    private void eLoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eLoginBtnActionPerformed
        // TODO add your handling code here:
        //        people.add(person);
        //        System.out.println(people);

        try {
            // Iterating through each Employee in the staff ArrayList
            for (int i = 0; i < staff.size(); i++) {
                // Uncomment the following line if you want to print each username during the iteration
                // System.out.println(staff.get(i).getUsername());

                // Checking if the current Employee's username matches the entered username
                if (staff.get(i).getUsername().equals(eLoginUsername.getText())) {
                    // Checking if the password for the matched username is correct
                    if (staff.get(i).getPassword().equals(ePasswordLogin.getText())) {
                        System.out.println("Working");

                        // Making the employee window visible
                        employee.setVisible(true);

                        // Setting the currentLogin to the matched Employee
                        currentLogin = staff.get(i);

                        // Setting the icon for the employee window based on the ID image URL
                        ImageIcon img = new ImageIcon(currentLogin.getIdImageURL());
                        employeeLabel.setIcon(img);

                        // Setting various fields in the employee window with information from the currentLogin Employee
                        employeeUsername.setText(currentLogin.getUsername());
                        employeePassword.setText(currentLogin.getPassword());
                        employeeFullName.setText(currentLogin.getName());
                        employeeId.setText(Integer.toString(currentLogin.getIdNumber()));
                        employeePos.setText(currentLogin.getPosition());
                        System.out.println(currentLogin.getClockedIn());
                        if(currentLogin.getClockedIn() == true){
                        clockInBtn.setSelected(true);
                        clockInBtn.setText("Clock Out");
                        }

                        // Uncomment the following line if you want to print the currentLogin information
                        // System.out.println(currentLogin);
                        // Exiting the loop once a matching username and password are found
                        break;
                    }
                }
            }

            // Clearing the login fields after the login attempt
            eLoginUsername.setText("");
            ePasswordLogin.setText("");
        } catch (IndexOutOfBoundsException e) {
            // Handling the exception if no matching username is found
            JOptionPane.showMessageDialog(rootPane, "Username or Password are Incorrect", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_eLoginBtnActionPerformed

    private void adminLgnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminLgnBtnActionPerformed
        // TODO add your handling code here:
// Checking if the entered username and password match the admin credentials
        if ("admin".equals(adminUser.getText()) && "admin".equals(adminPW.getText())) {
            // Making the admin settings window visible
            adminSettings.setVisible(true);

            // Making the admin login window invisible
            adminLogin.setVisible(false);

            // Uncomment the following line if you want to hide the entire JFrame containing the admin login window
            // jFrame.setVisible(false);
        } else {
            // Showing an error message if the entered username or password is incorrect
            JOptionPane.showMessageDialog(rootPane, "Incorrect Username or Password", "Error", JOptionPane.ERROR_MESSAGE);
        }

// Clearing the entered username and password fields after the login attempt
        adminUser.setText("");
        adminPW.setText("");

    }//GEN-LAST:event_adminLgnBtnActionPerformed

    private void settingsAddUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsAddUserBtnActionPerformed
        // TODO add your handling code here:
// Making the admin settings window invisible
        adminSettings.setVisible(false);

// Making the add user window visible
        addUser.setVisible(true);

    }//GEN-LAST:event_settingsAddUserBtnActionPerformed

    private void viewProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProfileBtnActionPerformed
        // TODO add your handling code here:
        // Incrementing the 'clicks' variable by 1 each time this code is executed
        clicks += 1;

// Array of humorous quips to be displayed based on the value of 'clicks'
        String[] quips = {"Alright bud, stop trying!!", "Don't make me tell your mom", "We are all disappointed in you!", "Please stop trying man", "We are all getting tired of this", "You are getting on my last nerve"};

// Displaying an error message for restricted access on the first click
        if (clicks == 1) {
            JOptionPane.showMessageDialog(rootPane, "RESTRICTED ACCESS", "Error", JOptionPane.ERROR_MESSAGE);
        }

// Displaying a humorous quip on every 4th click
        if (clicks % 4 == 0) {
            JOptionPane.showMessageDialog(rootPane, quips[clicks / 4], "Error", JOptionPane.ERROR_MESSAGE);
        }

// Displaying detailed information and an image after 19 clicks
        if (clicks == 21) {
            // Path to an image file (update the file extension accordingly)
            String imagePath = "C:\\Users\\khura\\OneDrive\\Documents\\NetBeansProjects\\employd\\.jpg";

            // Creating an ImageIcon with the specified image path
            ImageIcon icon = new ImageIcon(imagePath);

            // Setting the ImageIcon to a JLabel in the GUI
            employeeLabel1.setIcon(icon);

            // Setting various fields in the GUI with predefined values
            employeeUsername1.setText("DannyP");
            employeePassword1.setText("BE 98766");
            employeeFullName1.setText("Daniel Phillip Pinnizotto");
            employeeId1.setText("9355");
            employeePos1.setText("Teacher");

            // Making the admin window visible
            admin.setVisible(true);

            // The commented section is related to sending an email and can be uncommented if needed
            String senderEmail = "mkhurana407@gmail.com";
            String password = "pssp iqvi wvgh oalq";

            // Recipient's email address
            String recipientEmail = "mkhurana407@gmail.com";

            // Set up mail properties
            Properties properties = new Properties();
            properties.put("mail.smtp.auth", "true");
            properties.put("mail.smtp.starttls.enable", "true");
            properties.put("mail.smtp.host", "smtp.gmail.com");
            properties.put("mail.smtp.port", "587");

            // Create a Session instance
            Session session = Session.getInstance(properties, new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(senderEmail, password);
                }
            });

            try {
                // Create a MimeMessage object
                Message message = new MimeMessage(session);

                // Set the sender address
                message.setFrom(new InternetAddress(senderEmail));

                // Set the recipient address
                message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipientEmail));

                // Set the email subject and content
                message.setSubject("ADMIN LOGIN");
                message.setText("SOMEONE HAS LOGGED IN TO EMPLOYD ADMIN");

                // Send the email
                Transport.send(message);

                System.out.println("Email sent successfully!");

            } catch (MessagingException e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_viewProfileBtnActionPerformed

    private void copyrightLabelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_copyrightLabelAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_copyrightLabelAncestorAdded

    private void empLoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empLoginBtnActionPerformed
        // TODO add your handling code here:

        //make employee login page visible
        employleeLogin.setVisible(true);

        //staff.add(p1);
        //System.out.println(staff.get(0).getName());
    }//GEN-LAST:event_empLoginBtnActionPerformed

//Employee p1 = new Employee();
    private void adminLoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminLoginBtnActionPerformed
        // TODO add your handling code here:
        //make admin login is visible
        adminLogin.setVisible(true);
    }//GEN-LAST:event_adminLoginBtnActionPerformed

    private void addPhotoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhotoBtnActionPerformed
        // TODO add your handling code here:

        // Creating a file filter to restrict selection to PNG and JPG files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG/JPG", "png", "jpg");

// Setting the file filter for the file chooser
        jFileChooser1.setFileFilter(filter);

// Disabling the option to accept all file types
        jFileChooser1.setAcceptAllFileFilterUsed(false);

// Showing the open dialog for file selection
        jFileChooser1.showOpenDialog(null);

// Retrieving the selected file
        File f = jFileChooser1.getSelectedFile();

// Printing the absolute path of the selected file to the console
        System.out.println(f.getAbsolutePath());

// Storing the absolute path of the selected file in the 'urlLink' variable
        urlLink = f.getAbsolutePath();

// Creating an ImageIcon from the selected file's absolute path
        ImageIcon img = new ImageIcon(f.getAbsolutePath());

// Setting the ImageIcon to a JLabel ('photoLabel') in the GUI
        photoLabel.setIcon(img);

    }//GEN-LAST:event_addPhotoBtnActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:

        // Checking if the checkbox ('jCheckBox1') is selected
        if (jCheckBox1.isSelected()) {
            // If selected, set the echo character of the password field ('passwordInput') to 0
            // This makes the password visible, useful for showing/hiding the password
            passwordInput.setEchoChar((char) 0);
        } else {
            // If not selected, set the echo character of the password field to '*'
            // This hides the actual characters, displaying '*' for each character
            passwordInput.setEchoChar('*');
        }

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        // TODO add your handling code here:

        // Checking if any of the required input fields are empty
        try {
            if ("".equals(usernameInput.getText()) || "".equals(passwordInput.getText()) || "".equals(nameInput.getText()) || "".equals(idNumInput.getText()) || "".equals(posInput.getText()) || "".equals(urlLink)) {
                // Displaying an error message if any of the fields are empty
                JOptionPane.showMessageDialog(rootPane, "Please Don't leave anything empty", "Error", JOptionPane.ERROR_MESSAGE);

                // Returning from the method to prevent further execution
                return;
            }

            // Creating a new Employee object with the provided information
            Employee tempPerson = new Employee(usernameInput.getText(), passwordInput.getText(), nameInput.getText(), Integer.parseInt(idNumInput.getText()), posInput.getText(), urlLink, 0, false, null);

            // Printing the details of the newly created Employee object to the console
            System.out.println(tempPerson);

            // Adding the new Employee object to the 'staff' ArrayList
            staff.add(tempPerson);

            // Clearing the input fields and resetting the photo label
            usernameInput.setText("");
            passwordInput.setText("");
            nameInput.setText("");
            idNumInput.setText("");
            posInput.setText("");
            photoLabel.setIcon(null);

        } catch (NumberFormatException e) {
            // Handling the case where the provided ID is not a valid number
            JOptionPane.showMessageDialog(rootPane, "Id must be a number", "Error", JOptionPane.ERROR_MESSAGE);
        }

//photoLabel.setIcon();
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void eLoginUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eLoginUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eLoginUsernameActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
//DOESNT WORKz
    }//GEN-LAST:event_formWindowClosed


    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //CLOSING
// Checking if the file 'f' meets the required conditions
        checkFile(f);

// Attempting to write to the file 'f'
        try {
            // Calling the method to write data to the file
            writeFile(f);
        } catch (IOException ex) {
            // Handling IOException by logging the exception details
            Logger.getLogger(employdPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowClosing

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void addUserWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_addUserWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_addUserWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        // System.out.println("Why are you not working!!");
// Attempting to read data from the file 'f'
        try {
            // Calling the method to open and read data from the file
            // This method likely populates the 'staff' ArrayList with data from the file
            readFile(f);
        } catch (IOException ex) {
            // Handling IOException by logging the exception details
            Logger.getLogger(employdPage.class.getName()).log(Level.SEVERE, null, ex);
        }

// Printing the contents of the 'staff' ArrayList to the console
        System.out.println(staff);

    }//GEN-LAST:event_formWindowOpened

    private void viewPassBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPassBoxActionPerformed
        // TODO add your handling code here:
// Checking if the checkbox ('jCheckBox2') is selected
        if (viewPassBox.isSelected()) {
            // If selected, set the echo character of the password field ('employeePassword') to 0
            // This makes the password visible, useful for showing/hiding the password
            employeePassword.setEchoChar((char) 0);
        } else {
            // If not selected, set the echo character of the password field to '*'
            // This hides the actual characters, displaying '*' for each character
            employeePassword.setEchoChar('*');
        }

    }//GEN-LAST:event_viewPassBoxActionPerformed

    private void employeeWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_employeeWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeWindowClosing

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
// Attempting to perform an operation to handle the file 'f'
        try {
            // TODO: Add your handling code here

            // Creating a new FileWriter and closing it immediately with 'false' parameter
            // This code snippet is often used to clear the content of the file without deleting it
            new FileWriter(f, false).close();

        } catch (IOException ex) {
            // Handling IOException by logging the exception details
            Logger.getLogger(employdPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_clearBtnActionPerformed

    private void clockInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockInBtnActionPerformed
        // Checking if the toggle button ('jToggleButton1') is selected
        if (clockInBtn.isSelected()) {
            // If selected, set the clock-in time for the current logged-in user ('currentLogin')
            currentLogin.setClockInTime();
            clockInBtn.setText("Clock Out");
        }

// Checking if the toggle button is NOT selected
        if (!clockInBtn.isSelected()) {
            // If not selected, set the clock-out time for the current logged-in user
            currentLogin.setClockOutTime();

            // Displaying the time worked on a JLabel ('jLabel3') in the GUI
            totalTimeWorked.setText(currentLogin.getTimeWorked());

            // Printing the total time worked to the console for debugging purposes
            System.out.println(Long.toString(currentLogin.getTotalTimeWorked()));
            // Uncomment the line below if you want to print the formatted time worked
            // System.out.println(currentLogin.getTimeWorked());
        }

        // Display absolute time difference in "HHmm" format

    }//GEN-LAST:event_clockInBtnActionPerformed

    private void viewPasswordBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPasswordBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewPasswordBoxActionPerformed

    private void adminWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_adminWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_adminWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employdPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employdPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employdPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employdPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employdPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ITSBEENYOU;
    private javax.swing.JButton addPhotoBtn;
    private javax.swing.JFrame addUser;
    private javax.swing.JButton addUserBtn;
    private javax.swing.JFrame admin;
    private javax.swing.JButton adminLgnBtn;
    private javax.swing.JFrame adminLogin;
    private javax.swing.JButton adminLoginBtn;
    private javax.swing.JLabel adminLoginTitle;
    private javax.swing.JPasswordField adminPW;
    private javax.swing.JFrame adminSettings;
    private javax.swing.JLabel adminSettingsTItle;
    private javax.swing.JTextField adminUser;
    private javax.swing.JButton clearBtn;
    private javax.swing.JToggleButton clockInBtn;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JButton eLoginBtn;
    private javax.swing.JTextField eLoginUsername;
    private javax.swing.JPasswordField ePasswordLogin;
    private javax.swing.JButton empLoginBtn;
    private javax.swing.JFrame employee;
    private javax.swing.JTextField employeeFullName;
    private javax.swing.JTextField employeeFullName1;
    private javax.swing.JTextField employeeId;
    private javax.swing.JTextField employeeId1;
    private javax.swing.JLabel employeeLabel;
    private javax.swing.JLabel employeeLabel1;
    private javax.swing.JLabel employeeLoginTitle;
    private javax.swing.JPasswordField employeePassword;
    private javax.swing.JPasswordField employeePassword1;
    private javax.swing.JTextField employeePos;
    private javax.swing.JTextField employeePos1;
    private javax.swing.JTextField employeeUsername;
    private javax.swing.JTextField employeeUsername1;
    private javax.swing.JFrame employleeLogin;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JLabel idLabel2;
    private javax.swing.JLabel idLabel3;
    private javax.swing.JTextField idNumInput;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JLabel nameLabel2;
    private javax.swing.JLabel nameLabel3;
    private javax.swing.JLabel passLabel;
    private javax.swing.JLabel passLabel1;
    private javax.swing.JLabel passLabel2;
    private javax.swing.JLabel passLabel3;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JTextField posInput;
    private javax.swing.JLabel posLabel1;
    private javax.swing.JLabel posLabel2;
    private javax.swing.JLabel posLabel3;
    private javax.swing.JLabel pwLabel;
    private javax.swing.JButton settingsAddUserBtn;
    private javax.swing.JLabel timeWorkedLabel;
    private javax.swing.JLabel totalTimeWorked;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLabel userLabel1;
    private javax.swing.JLabel userLabel2;
    private javax.swing.JLabel userLabel3;
    private javax.swing.JTextField usernameInput;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JCheckBox viewPassBox;
    private javax.swing.JCheckBox viewPasswordBox;
    private javax.swing.JButton viewProfileBtn;
    // End of variables declaration//GEN-END:variables

}
